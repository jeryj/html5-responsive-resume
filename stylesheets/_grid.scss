// IF NEED IE ONLY STYLESHEET
// SeT THIS IN IE.SCSS
$fix-mqs: false !default;
$desktop: 48em;
$tablet: 34em;
$mobile: 24em;

@mixin media($width) {
    // If we're outputting for a fixed media query set...
    @if $fix-mqs {
        // ...and if we should apply these rules...
        @if $fix-mqs >= $width {
            // ...output the content the user gave us.
            @content;
        }
    }
    @else {
        // Otherwise, output it using a regular media query
        @media screen and (min-width: $width) {
            @content;
        }
    }
}

@mixin mobile-only {
  @media (max-width: $tablet) {
    @content;
  }
}

@mixin tablet-only {
  @media (min-width: $tablet) and (max-width: $desktop - .01em) {
    @content;
  }
}

@mixin everything-but-desktop {
  @media (max-width: $desktop - .01em) {
    @content;
  }
}

%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

%row,
.row {
    padding-left: 20px;
    padding-right: 20px;
    @extend %clearfix;
    @include container;
}

/*  SELF CLEARING FLOATS - CLEARFIX METHOD */
.container,
.clr,
.group {
  @extend %clearfix;
}


/* Clearing */
[class*="content"],
[class*="site"] {
    @extend %clearfix;
}



// grid system
@include media($tablet) {
	@for $i from 1 through 12 {
	    .grid_#{$i} {
	      @include span($i);
	    }

	    .rtl_grid {
	    	.grid_#{$i} {
		      @include span($i rtl);
		      margin-right: 0;
		    }
	    }

	}

	.last {
	  float: right;
	  margin-right: 0;
	}

	.rtl_grid .last {
		margin-left: 0;
	}
}

// gallery system
@for $i from 2 through 4 {
  	.gallery_#{$i} {
      margin-bottom: 1.6em;

  		@include media(30em) {
	      	@include gallery(2 of 4);
	      	margin-bottom: gutter(4);
	    }

	    @include media(43.75em) {
	      	@include gallery($i of $i*$i);
	      	margin-bottom: gutter($i*$i);
	    }

  	}
}


