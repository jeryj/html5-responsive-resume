/* =Reset
-------------------------------------------------------------- */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, font, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td {
  border: 0;
  font-family: inherit;
  font-size: 100%;
  font-style: inherit;
  font-weight: inherit;
  margin: 0;
  outline: 0;
  padding: 0;
  vertical-align: baseline; }

html {
  font-size: 100%;
  /* Corrects text resizing oddly in IE6/7 when body font-size is set using em units http://clagnut.com/blog/348/#c790 */
  overflow-y: scroll;
  /* Keeps page centred in all browsers regardless of content height */
  -webkit-text-size-adjust: 100%;
  /* Prevents iOS text size adjust after orientation change, without disabling user zoom */
  -ms-text-size-adjust: 100%;
  /* www.456bereastreet.com/archive/201012/controlling_text_size_in_safari_for_ios_without_disabling_user_zoom/ */ }

body {
  background: #fff;
  overflow: hidden; }

article, aside, details, figcaption, figure, footer, header, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

table {
  /* tables still need 'cellspacing="0"' in the markup */
  border-collapse: separate;
  border-spacing: 0; }

caption, th, td {
  font-weight: normal;
  text-align: left; }

blockquote:before, blockquote:after, q:before, q:after {
  content: ""; }

blockquote, q {
  quotes: "" ""; }

a:focus {
  outline: thin dotted; }

a:hover, a:active {
  /* Improves readability when focused and also mouse hovered in all browsers people.opera.com/patrickl/experiments/keyboard/test */
  outline: 0; }

a img {
  border: 0; }

/* Reseting to border-box so we can do 100% width with 20px and not mess stuff up. */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/* Text meant only for screen readers */
.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important; }

.screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  color: #21759b;
  display: block;
  font-size: 14px;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
  /* Above WP toolbar */ }

.primary {
  color: #356d99; }

.primary-bg {
  background: #356d99; }

.secondary {
  color: #0A3348; }

.secondary-bg {
  background: #0A3348; }

.row:after, .container:after, .clr:after, .group:after, [class*="content"]:after, [class*="site"]:after {
  content: "";
  display: table;
  clear: both; }

.row {
  padding-left: 20px;
  padding-right: 20px;
  max-width: 560px;
  margin-left: auto;
  margin-right: auto; }
  .row:after {
    content: " ";
    display: block;
    clear: both; }

/*  SELF CLEARING FLOATS - CLEARFIX METHOD */
/* Clearing */
@media screen and (min-width: 34em) {
  .grid_1 {
    width: 6.77966%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_1 {
    width: 6.77966%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_2 {
    width: 15.25424%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_2 {
    width: 15.25424%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_3 {
    width: 23.72881%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_3 {
    width: 23.72881%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_4 {
    width: 32.20339%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_4 {
    width: 32.20339%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_5 {
    width: 40.67797%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_5 {
    width: 40.67797%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_6 {
    width: 49.15254%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_6 {
    width: 49.15254%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_7 {
    width: 57.62712%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_7 {
    width: 57.62712%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_8 {
    width: 66.10169%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_8 {
    width: 66.10169%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_9 {
    width: 74.57627%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_9 {
    width: 74.57627%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_10 {
    width: 83.05085%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_10 {
    width: 83.05085%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_11 {
    width: 91.52542%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_11 {
    width: 91.52542%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_12 {
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0; }
  .rtl_grid .grid_12 {
    width: 100%;
    float: right;
    margin-right: 0;
    margin-left: 0;
    margin-right: 0; }
  .last {
    float: right;
    margin-right: 0; }
  .rtl_grid .last {
    margin-left: 0; } }

.gallery_2 {
  margin-bottom: 1.6em; }
  @media screen and (min-width: 30em) {
    .gallery_2 {
      width: 47.36842%;
      float: left;
      margin-bottom: 5.26316%; }
      .gallery_2:nth-child(2n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_2:nth-child(2n+2) {
        margin-left: 52.63158%;
        margin-right: -100%;
        clear: none; } }
  @media screen and (min-width: 43.75em) {
    .gallery_2 {
      width: 47.36842%;
      float: left;
      margin-bottom: 5.26316%; }
      .gallery_2:nth-child(2n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_2:nth-child(2n+2) {
        margin-left: 52.63158%;
        margin-right: -100%;
        clear: none; } }

.gallery_3 {
  margin-bottom: 1.6em; }
  @media screen and (min-width: 30em) {
    .gallery_3 {
      width: 47.36842%;
      float: left;
      margin-bottom: 5.26316%; }
      .gallery_3:nth-child(2n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_3:nth-child(2n+2) {
        margin-left: 52.63158%;
        margin-right: -100%;
        clear: none; } }
  @media screen and (min-width: 43.75em) {
    .gallery_3 {
      width: 31.81818%;
      float: left;
      margin-bottom: 2.27273%; }
      .gallery_3:nth-child(3n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_3:nth-child(3n+2) {
        margin-left: 34.09091%;
        margin-right: -100%;
        clear: none; }
      .gallery_3:nth-child(3n+3) {
        margin-left: 68.18182%;
        margin-right: -100%;
        clear: none; } }

.gallery_4 {
  margin-bottom: 1.6em; }
  @media screen and (min-width: 30em) {
    .gallery_4 {
      width: 47.36842%;
      float: left;
      margin-bottom: 5.26316%; }
      .gallery_4:nth-child(2n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_4:nth-child(2n+2) {
        margin-left: 52.63158%;
        margin-right: -100%;
        clear: none; } }
  @media screen and (min-width: 43.75em) {
    .gallery_4 {
      width: 24.05063%;
      float: left;
      margin-bottom: 1.26582%; }
      .gallery_4:nth-child(4n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_4:nth-child(4n+2) {
        margin-left: 25.31646%;
        margin-right: -100%;
        clear: none; }
      .gallery_4:nth-child(4n+3) {
        margin-left: 50.63291%;
        margin-right: -100%;
        clear: none; }
      .gallery_4:nth-child(4n+4) {
        margin-left: 75.94937%;
        margin-right: -100%;
        clear: none; } }

body, button, input, select, textarea {
  color: #333;
  font-family: "adobe-caslon-pro", georgia, times, serif;
  font-size: 1em;
  line-height: 1.6;
  font-weight: 400; }
  @media screen and (min-width: 34em) {
    body, button, input, select, textarea {
      font-size: 1.1em; } }

/* Headings */
h1, h2, h3, h4, h5, h6 {
  font-family: "adobe-caslon-pro", georgia, times, serif;
  color: #D76429;
  clear: both;
  margin: 0 0 10px;
  font-weight: 400;
  line-height: 1.2em; }

h1 {
  font-size: 2.3em; }

h2 {
  font-size: 1.6em; }

h3 {
  font-size: 1.425em; }

h4 {
  font-size: 1.3em; }

h5 {
  font-size: 1.125em; }

h6 {
  font-size: 1em; }

p + h1, ul + h1, p + h2, ul + h2, p + h3, ul + h3, p + h4, ul + h4, p + h5, ul + h5, p + h6, ul + h6 {
  margin-top: 1.8em; }

/* Text elements */
p {
  font-size: 1em;
  margin-bottom: 1.125em;
  font-weight: 300; }

ul, ol {
  margin: 0 0 1.6em 1.25em; }

ul {
  list-style: disc; }

ol {
  list-style: decimal; }

li > ul, li > ol {
  margin-bottom: 0;
  margin-left: 1.6em; }

b, strong {
  font-weight: bold; }

dfn, cite, em {
  font-family: georgia, times, serif;
  font-style: italic; }

pre {
  background: #eee;
  font-family: "Courier 10 Pitch", Courier, monospace;
  font-size: .95em;
  line-height: 1.6;
  margin-bottom: 1.6em;
  padding: 1.6em;
  overflow: auto;
  max-width: 100%; }

code, kbd, tt, var {
  font: .95em Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace; }

figure {
  margin: 0; }

img {
  height: auto;
  /* Make sure images are scaled correctly. */
  max-width: 100%;
  /* Adhere to container width. */ }

/* Links */
a {
  color: #209AAE;
  text-decoration: none;
  -webkit-transition: color .2s;
          transition: color .2s;
  -ms-touch-action: manipulation;
      touch-action: manipulation; }

a:hover, a:focus, a:active {
  color: #187483; }

.hint {
  font-size: .9em;
  color: #595959; }

body {
  padding-top: 4em;
  padding-bottom: 2em; }

.contact, .page-title {
  text-align: center; }

.contact {
  list-style: none;
  margin: 0; }
  @media screen and (min-width: 34em) {
    .contact li {
      display: inline-block; }
      .contact li:after {
        content: "";
        display: inline-block;
        width: 5px;
        height: 5px;
        background: #ccc;
        border-radius: 50%;
        margin: .175em .875em; }
      .contact li:last-child:after {
        display: none; } }

.work-section-title {
  font-size: 1em;
  padding-bottom: .1em;
  border-bottom: 1px solid #aaa;
  margin: 3em 0 .625em 0; }
  @media screen and (min-width: 34em) {
    .work-section-title {
      margin-bottom: 1.625em; } }
  @media screen and (min-width: 48em) {
    .work-section-title {
      width: 130%;
      margin-left: -20%;
      margin-top: 6em; }
      .work-section-title:first-of-type {
        margin-top: 3em; } }

@media screen and (min-width: 48em) {
  .workplace {
    margin: 2.5em 0 0; } }

.position-title {
  color: #333;
  font-size: 1em;
  font-weight: 300;
  font-style: italic;
  margin: .1em 0 .02em; }

.work-link-wrap, .time-worked {
  font-size: .875em; }

.time-worked {
  color: #666666;
  margin: 0 0 -.2em; }

.no-work-link, .work-link-wrap {
  margin: 0 0 .625em; }

.paragraph-list {
  margin-left: 0; }
  .paragraph-list li {
    display: inline;
    list-style: none; }
    .paragraph-list li:after {
      content: ', '; }
    .paragraph-list li:last-child:after {
      content: '.'; }

.colophon {
  border-top: 1px solid #aaa;
  margin: 3em 0;
  padding: 3em 0 0; }
  @media screen and (min-width: 48em) {
    .colophon {
      width: 130%;
      margin-left: -15%; } }


/*# sourceMappingURL=data:application/json;base64, */